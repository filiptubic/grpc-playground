syntax = "proto3";

package calculator;
option go_package="calculator/calculatorpb";

message SumRequest {
    int32 x = 1;
    int32 y = 2;
}

message SumResponse {
    int32 sum = 1;
}

message PrimeNumberDecompositionRequest {
    int32 number = 1;
}

message PrimeNumberDecompositionResponse {
    int32 number = 1;
}

message AverageRequest {
    double number = 1;
}

message AverageResponse {
    double number = 1;
}

message MaximumRequest {
    int32 number = 1;
}

message MaximumResponse {
    int32 number = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service Calculator {
    // Unary
    rpc Sum(SumRequest) returns(SumResponse) {};
    // Server Streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns(stream PrimeNumberDecompositionResponse) {};
    // Client Streaming
    rpc ComputeAverage(stream AverageRequest) returns(AverageResponse) {};
    // Bidirectional streaming
    rpc FindMaximum(stream MaximumRequest) returns(stream MaximumResponse) {};
    // this RPC throw an INVALID_ARGUMENT if number is negative
    rpc SquareRoot(SquareRootRequest) returns(SquareRootResponse) {};
}